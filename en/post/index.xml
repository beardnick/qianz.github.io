<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on qianz</title>
    <link>http://localhost:1313/qianz.github.io/en/post/</link>
    <description>Recent content in Posts on qianz</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Wed, 03 Jul 2024 23:19:37 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/qianz.github.io/en/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hello</title>
      <link>http://localhost:1313/qianz.github.io/en/post/zh/hello/</link>
      <pubDate>Wed, 03 Jul 2024 23:19:37 +0800</pubDate>
      <guid>http://localhost:1313/qianz.github.io/en/post/zh/hello/</guid>
      <description>你好 </description>
    </item>
    <item>
      <title>Hello</title>
      <link>http://localhost:1313/qianz.github.io/en/post/en/hello/</link>
      <pubDate>Wed, 03 Jul 2024 23:19:33 +0800</pubDate>
      <guid>http://localhost:1313/qianz.github.io/en/post/en/hello/</guid>
      <description>Hello </description>
    </item>
    <item>
      <title>为什么计算机网络要这么设计</title>
      <link>http://localhost:1313/qianz.github.io/en/post/why_network/</link>
      <pubDate>Sat, 13 Apr 2024 11:04:55 +0800</pubDate>
      <guid>http://localhost:1313/qianz.github.io/en/post/why_network/</guid>
      <description>为什么需要有ip地址 大家都请楚ip地址最终需要被转换为mac地址才能最终发给目标机器，那为什么不直接使用mac地址进行通信呢? 更大点说为什么有了链路层还需要网络层呢？&#xA;mac地址加单个大交换机的网络 机器与机器之间需要通过交换机中转通信，为了能够让互联网上任意两台机器都能互相访问，交换机需要记录非常多的mac地址。&#xA;显然把全球的计算机全部连接在一个大交换机上面并不现实，首先是这样做这个交换机将会特别巨大，再者此交换机会变成一个单点， 如果这个交换机崩溃，全球互联网都会崩溃。那么优化一下结构，把交换机分成多级就可以解决这个问题了。&#xA;mac地址加多级交换机的网络 此时通信的时候每台交换机都需要记录下所有目标mac地址要走的下一跳的交换机。&#xA;如绿色机器要传输数据到红色机器，中间要经过交换机1,2,3. 如绿色机器要传输数据到紫色机器，中间要经过交换机1,2,4. 仅仅支持这两条链路就需要记下这些信息&#xA;交换机 记录 1 绿：直连 红：2 紫：2 2 绿：1 红：3 紫：4 3 绿：2 红：直连 紫：2 4 绿：3 红：2 紫：直连 要支持全球的互联网的连接将会需要巨大的空间存储链路信息，在mac地址上这种问题已经无法解决了. 于是要引入ip地址来解决这个问题，再次印证k计算机里面所有问题都可以通过加一个中间层解决。</description>
    </item>
    <item>
      <title>为什么vim</title>
      <link>http://localhost:1313/qianz.github.io/en/post/why_vim/</link>
      <pubDate>Tue, 05 Dec 2023 12:57:08 +0800</pubDate>
      <guid>http://localhost:1313/qianz.github.io/en/post/why_vim/</guid>
      <description>杀手级功能：vim模式 用代码的方式描述编辑操作 只要一个领域的工作可以用代码来描述那么就会带了生产力的巨大飞跃。&#xA;html,css把图形用代码描述，就产生了前端生态 docker把环境部署，安装，配置行为用代码描述就开创了云时代 同样的vim将编辑行为用代码描述出来就大大提高了编辑的效率。 vim模式让以下编辑器功能如虎添翼&#xA;快捷键 这是我最喜欢的一张vim指令速查表&#xA;vim的快捷键相比于其它编辑器，ide有以下优点&#xA;快捷键丰富：内置几百个快捷键，另外支持自定义快捷键，可以组合出成千上万个快捷键 快捷键覆盖所有操作：快捷键覆盖了所有操作，所以手不用去拿鼠标，大大提高效率 快捷键方便、不伤手：大部分快捷键可以让手指不离开主键盘区，不需要按控制键，按起来效率高，保护小拇指 在第一第二点上大家可能觉得vscode，jetbrain也有很多快捷键，也支持快捷键自定义。确实如此，但是vscode，jetbrain上有很大一部分快捷键完全为其ui服务，例如打开终端，打开文件浏览器等等。 对于提升纯编辑体验的快捷键不多，只有比较通用的跳到行头，跳到行尾，复制，粘贴，删除，移动行等等。这些只够普通的编辑操作，稍微复杂点的操作就必须配合鼠标了，而动用鼠标则必然让手离 开主键盘区，这大大降低了编辑效率。同时因为编辑相关的快捷键少，也会让一些比较复杂的编辑场景如多光标编辑，宏操作受限。&#xA;多光标操作 vscode，jetbrain同样提供多光标操作的功能，但是多光标下无法方便地使用鼠标，只能用快捷键，而vscode,jetbrain本身的快捷键功能覆盖的编辑操作少，所以就无法进行复杂的多光标编辑&#xA;从vscode的文档的演示种可以看出来基本只能在多个光标前后进行一些编辑，光标移动依靠方向键移动&#xA;vim在vim模式的加持下则可以做出非常复杂的多光标编辑操作，下面是vim多光标插件的演示效果&#xA;还想看更多非常强大的用法的演示，可以访问多光标插件的库visual multi repository&#xA;宏 jetbrain,vscode没有内置宏功能，有第三方插件实现了宏录制的功能，可以把一些操作录制下来并绑定快捷键回放。同样，因为jetbrain,vscode的编辑快捷键少，所以导致宏录制本身功能十分受限，无法实现一些复杂的编辑操作。 对于vim，因为宏其实就是记录键盘敲击序列，所以实现起来十分容易。&#xA;例子: 临时调试 些时候我们临时调试一些程序，就想知道程序有没有走到某些分支，我们可能随手就敲下&#xA;normal code ... console.log(&amp;#39;reached 123&amp;#39;); normal code ... TODO: 这里要有一个演示视频 23-12-11 - 开放的生态 现代化的vim </description>
    </item>
  </channel>
</rss>
